/*
  Sketch generated by the Arduino IoT Cloud Thing "Untitled"
  https://create.arduino.cc/cloud/things/31791791-d3c0-4909-8987-20943af57de7

  Arduino IoT Cloud Variables description

  The following variables are automatically generated and updated when changes are made to the Thing

  float mkr1010_humid;
  bool mkr1010_led;
  float mkr1010_temp;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/
#include "example.hpp"
#include "Adafruit_Sensor.h"
#include "DHT.h"
//#include "SNU.h" // this include had to be added because the include in the OTA-samd.cpp of SNU.h did not work.
#include "arduino_secrets.h"
#include "thingProperties.h"
#include <Arduino.h>

#define LEDPIN     1
#define DHTPIN     0
#define DHTTYPE    DHT11

#define MEAS_DELAY 1000 // delay in ms

DHT dht_2(DHTPIN, DHTTYPE);

void exampleSetup()
{
  dht_2.begin();
  pinMode(LEDPIN, OUTPUT);

  // Initialize serial and wait for port to open:
  Serial.begin(9600);

  // This delay gives the chance to wait for a Serial Monitor without blocking if none is found
  delay(1500);

  // Defined in thingProperties.h
  initProperties();

  // Connect to Arduino IoT Cloud
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);

  /*
     The following function allows you to obtain more information
     related to the state of network and IoT Cloud connection and errors
     the higher number the more granular information you’ll get.
     The default is 0 (only errors).
     Maximum is 4
  */
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();
}

void exampleLoop()
{
  /*The Update is necessary to reset the wachtdogtimer. Otherwise the Watchdog would reset the Arduino*/
  ArduinoCloud.update();

  static unsigned long last_meas = millis();

  if ((millis() - last_meas) >= MEAS_DELAY)
  {
    mkr1010_temp  = dht_2.readTemperature();
    mkr1010_humid = dht_2.readHumidity();

    Serial.print("Temperature: ");
    Serial.print(mkr1010_temp);
    Serial.println(" °C");

    Serial.print("Humidity: ");
    Serial.print(mkr1010_humid);
    Serial.println(" %");

    last_meas = millis();
  }
}

/*
  Since Mkr1010Led is READ_WRITE variable, onMkr1010LedChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onMkr1010LedChange()
{
  // Add your code here to act upon Mkr1010Led change
  digitalWrite(LEDPIN, mkr1010_led);
}