#!/usr/bin/env python3

"""
Created: 10/19/21
by: Tim Schmid

Automatically update the src_filter in platformio.ini
"""

import os
import argparse
import configparser

envs = ["aws", "arduino"]
env_config = configparser.ConfigParser()
aws_filter = "+<aws/ -<arduino/> -<.git/> -<.svn/> "
arduino_filter = "-<aws/ +<arduino/> -<.git/> -<.svn/> "
platform = "arduino"
lib_deps_str = "${common.lib_deps}"

BASE_PATH = os.path.join(os.path.dirname(
    os.path.abspath(__file__)), os.pardir)
CONFIG_PATH = os.path.join(BASE_PATH, 'config', 'env', 'env.ini')

def checkFile():
    if not os.path.exists(CONFIG_PATH):
      print("No file detected. A new file will be created \n")
      with open(CONFIG_PATH, 'w') as env:
        env_config.read(CONFIG_PATH)
        env_config.add_section("env")
        env_config["env"]["platform"] = platform
        env_config["env"]["lib_deps"] = lib_deps_str

        with open(CONFIG_PATH, 'w') as f:
          env_config.write(f)

        print("New file created \n")

def setEnvironment():
  parser = argparse.ArgumentParser()
  parser.add_argument("env", help="Title of the desired environment (aws, arduino)")
  parser.error(f"Enter a valid environment name ({envs}) in order to set the env.ini file correctly")
  args = parser.parse_args()

  env_config.read(CONFIG_PATH)

  if args.env == envs[0]:
    env_config["env"]["src_filter"] = aws_filter
  elif args.env == envs[1]:
    env_config["env"]["src_filter"] = arduino_filter

  with open(CONFIG_PATH, 'w') as f:
    env_config.write(f)

  print(f"The environment {args.env} has been set \n")


if __name__ == "__main__":
  print(f"\033[90m{__doc__}\033[0m", end="\n")
  checkFile()
  setEnvironment()


    

